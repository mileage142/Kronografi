"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _envinfo() {
  const data = _interopRequireDefault(require("envinfo"));

  _envinfo = function () {
    return data;
  };

  return data;
}

function _package() {
  const data = _interopRequireDefault(require("expo-cli/package.json"));

  _package = function () {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @ts-ignore
// @ts-ignore: expo-cli is not listed in its own dependencies
async function action(options) {
  const info = await _envinfo().default.run({
    System: ['OS', 'Shell'],
    Binaries: ['Node', 'Yarn', 'npm', 'Watchman'],
    IDEs: ['Xcode', 'Android Studio'],
    npmPackages: ['expo', 'react', 'react-native', 'react-navigation'],
    npmGlobalPackages: ['expo-cli']
  }, {
    title: `Expo CLI ${_package().default.version} environment info`
  });
  console.log(info);
}

function _default(program) {
  program.command('diagnostics [project-dir]').description('Prints environment info to console.').asyncAction(action);
}
//# sourceMappingURL=../__sourcemaps__/commands/diagnostics.js.map
