{"version":3,"file":"envsub.test.js","sourceRoot":"","sources":["../../src/__test__/envsub.test.ts"],"names":[],"mappings":";;;;;AAAA,4CAAoB;AACpB,gDAAwB;AAExB,wDAA0B;AAE1B,uDAA+B;AAE/B,MAAM,YAAY,GAAG,cAAI,CAAC,IAAI,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;AAEnE,QAAQ,CAAC,QAAQ,EAAE,GAAG,EAAE;IACtB,MAAM,UAAU,GAAG,cAAI,CAAC,IAAI,CAAC,YAAE,CAAC,MAAM,EAAE,EAAE,aAAa,CAAC,CAAC;IAEzD,SAAS,CAAC,KAAK,IAAI,EAAE;QACnB,MAAM,kBAAE,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QACzE,MAAM,gBAAM,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE,WAAW,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5E,MAAM,kBAAkB,GAAG,MAAM,kBAAE,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACjE,MAAM,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;QACtD,MAAM,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,MAAM,aAAa,GAAG,gBAAM,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,CAAC;QAC3D,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import os from 'os';\nimport path from 'path';\n\nimport fs from 'fs-extra';\n\nimport envsub from '../envsub';\n\nconst templatePath = path.join(__dirname, 'example.json.template');\n\ndescribe('envsub', () => {\n  const outputFile = path.join(os.tmpdir(), 'output.json');\n\n  afterEach(async () => {\n    await fs.remove(outputFile);\n  });\n\n  it('should create an output file with the filled-out template', async () => {\n    await envsub(templatePath, outputFile, { SOME_KEY: 123, ANOTHER_KEY: 456 });\n    const outputFileContents = await fs.readFile(outputFile, 'utf8');\n    const outputFileJson = JSON.parse(outputFileContents);\n    expect(outputFileJson).toEqual({ someKey: 123, anotherKey: 456 });\n  });\n\n  it('should throw an error if some variables are missing', async () => {\n    const envsubPromise = envsub(templatePath, outputFile, {});\n    await expect(envsubPromise).rejects.toThrow(/is not defined/);\n  });\n});\n"]}