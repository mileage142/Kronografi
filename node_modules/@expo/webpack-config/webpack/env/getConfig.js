"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("@expo/config");
const getConfigMode_1 = require("./getConfigMode");
const getMode_1 = __importDefault(require("./getMode"));
const paths_1 = require("./paths");
/**
 * Get the Expo project config in a way that's optimized for web.
 *
 * @param env Environment properties used for getting the Expo project config.
 * @category env
 */
function getConfig(env) {
    if (env.config) {
        return env.config;
    }
    const mode = getMode_1.default(env);
    const configMode = getConfigMode_1.getConfigMode(mode);
    const locations = env.locations || paths_1.getPaths(env.projectRoot, configMode);
    // Fill all config values with PWA defaults
    return config_1.getConfigForPWA(env.projectRoot, locations.absolute, {
        templateIcon: locations.template.get('icon.png'),
        mode: configMode,
    });
}
exports.default = getConfig;
//# sourceMappingURL=getConfig.js.map